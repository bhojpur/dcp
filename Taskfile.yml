version: "3"

vars:
  GREETING: Hello, Bhojpur DCP Developer!

tasks:
    default:
        cmds:
        - echo "{{.GREETING}}"
        silent: true

    build-cloud-tools:
        desc: Build cloud runtime engine software for Bhojpur DCP realization
        cmds:
        - GOFLAGS=-mod=mod go build -o bin/dcp ./cmd/cloud/dcp/main.go 
        - chmod 755 bin/dcp
        - cp bin/dcp $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/dcp-server ./cmd/cloud/server/main.go 
        - chmod 755 bin/dcp-server
        - cp bin/dcp-server $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/dcp-agent ./cmd/cloud/agent/main.go 
        - chmod 755 bin/dcp-agent
        - cp bin/dcp-agent $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/dcp-certificate ./cmd/cloud/cert/main.go 
        - chmod 755 bin/dcp-certificate
        - cp bin/dcp-certificate $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/containerd ./cmd/cloud/containerd/main.go 
        - chmod 755 bin/containerd
        - cp bin/containerd $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/ctr ./cmd/cloud/ctr/main.go 
        - chmod 755 bin/ctr
        - cp bin/ctr $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/dcp-secrets-encrypt ./cmd/cloud/encrypt/main.go 
        - chmod 755 bin/dcp-secrets-encrypt
        - cp bin/dcp-secrets-encrypt $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/dcp-etcd-snapshot ./cmd/cloud/etcsnapshot/main.go 
        - chmod 755 bin/dcp-etcd-snapshot
        - cp bin/dcp-etcd-snapshot $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/kubectl ./cmd/cloud/kubectl/main.go 
        - chmod 755 bin/kubectl
        - cp bin/kubectl $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/ctrfyle ./cmd/tools/ctrfyle/main.go 
        - chmod 755 bin/ctrfyle
        - cp bin/ctrfyle $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/helmctl ./cmd/tools/helm-controller/main.go 
        - chmod 755 bin/helmctl
        - cp bin/helmctl $GOPATH/bin
        - GOFLAGS=-mod=mod go build -o bin/cloud ./cmd/cloud/main.go 
        - chmod 755 bin/cloud
        - cp bin/cloud $GOPATH/bin

    build-grid-tools:
        desc: Build the distributed cloud platform management tools
        cmds:
        - GOFLAGS=-mod=mod go build -o bin/tunnel-server ./cmd/grid/tunnel-server.go 
        - GOFLAGS=-mod=mod go build -o bin/tunnel-agent ./cmd/grid/tunnel-agent.go 
        - GOFLAGS=-mod=mod go build -o bin/dcpctl ./cmd/grid/client-engine.go 
        - GOFLAGS=-mod=mod go build -o bin/dcpsvr ./cmd/grid/server-engine.go
        - GOFLAGS=-mod=mod go build -o bin/node-servant ./cmd/grid/node-servant.go
        - GOFLAGS=-mod=mod go build -o bin/controller-manager ./cmd/grid/controller-manager.go
        - GOFLAGS=-mod=mod go build -o bin/app-manager ./cmd/grid/app-manager.go

    build-web-samples:
        desc: Build the web application using wasm
        cmds:
        - cd internal; guiutl package -name "Bhojpur DCP" -os wasm -icon Icon.png
        - cd internal/wasm; gui web

    build-web-wasm:
        desc: Build the web application using wasm
        cmds:
        - cd pkg/webui/wasm; guiutl package -name "Bhojpur DCP" -os wasm -icon ../../../internal/Icon.png
        - cd pkg/webui/wasm; gui web

    build-web-gopherjs:
        desc: Build the web application using gopherjs
        cmds:
        - cd pkg/webui/bhojpur; guiutl package -name "Bhojpur DCP" -os gopherjs -icon ../../../internal/Icon.png
        - cd pkg/webui/bhojpur; gui web

    build-darwin:
        desc: Build the desktop application for current OS
        cmds:
        - guiutl package -name "Bhojpur DCP" -os darwin -sourceDir internal -icon internal/Icon.png
        - cp -R "Bhojpur DCP.app" ~/Applications

    build-linux:
        desc: Build the desktop application for current OS
        cmds:
        - guiutl package -name "Bhojpur DCP" -os linux -sourceDir internal -icon internal/Icon.png

    build-windows:
        desc: Build the desktop application for current OS
        cmds:
        - guiutl package -name "Bhojpur DCP" -os windows -sourceDir internal -icon internal/Icon.png

    package-android:
        desc: Package the mobile application for Android
        cmds:
        - guiutl package -name "Bhojpur DCP" -os android -appID net.bhojpur.dcp -icon internal/Icon.png

    package-ios:
        desc: Package the mobile application for iOS
        cmds:
        - guiutl package -name "Bhojpur DCP" -os ios -appID net.bhojpur.dcp -icon internal/Icon.png

    release-macos:
        desc: Release the native application for macOS App Store
        cmds:
        - guiutl release -appID net.bhojpur.dcp -appVersion 1.0 -appBuild 1 -category business

    release-android:
        desc: Release the mobile application for Google Play
        cmds:
        - guiutl release -os android -appID net.bhojpur.dcp -appVersion 1.0 -appBuild 1

    release-ios:
        desc: Release the mobile application for iOS App Store
        cmds:
        - guiutl release -os ios -appID net.bhojpur.dcp -appVersion 1.0 -appBuild 1

    run-web-server:
        desc: Run the web server application from source code
        cmds:
        - GOFLAGS=-mod=mod go run server.go
 
    run-web-client:
        desc: Run the web client application from source code
        cmds:
        - GOFLAGS=-mod=mod go run client.go

    run-mobile:
        desc: Run the mobile client application on emulator
        cmds:
        - GOFLAGS=-mod=mod go run -tags mobile native/main.go

    run-desktop: 
        desc: Run the desktop application on local host
        cmds:
        - GOFLAGS=-mod=mod go run native/main.go

    generate:
        desc: Generate Go source code
        cmds:
        - GOFLAGS=-mod=mod go generate ./...

    test:
        desc: Execute all the Unit Tests
        cmds:
        - gotestsum --junitfile test-results/unit-tests.xml -- -short -race -cover -coverprofile test-results/cover.out ./...

    swagger.gen:
        desc: Generate Go code
        cmds:
        - GOFLAGS=-mod=mod go generate bhojpur.net/dcp/internal bhojpur.net/dcp/pkg/swagger

    swagger.validate:
        desc: Validate all the Swagger API specifications
        cmds:
        - swagger validate pkg/swagger/swagger.yml

    swagger.doc:
        desc: Generate documentation for Swagger specified APIs
        cmds:
        - docker run -i yousan/swagger-yaml-to-html < pkg/swagger/swagger.yml > doc/index.html